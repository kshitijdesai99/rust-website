!(function(){"use strict";var Xn=Object.defineProperty;var Gt=Object.getOwnPropertySymbols;var Hn=Object.prototype.hasOwnProperty,Wn=Object.prototype.propertyIsEnumerable;var Qt=(W,L,D)=>L in W?Xn(W,L,{enumerable:!0,configurable:!0,writable:!0,value:D}):W[L]=D,Jt=(W,L)=>{for(var D in L||(L={}))Hn.call(L,D)&&Qt(W,D,L[D]);if(Gt)for(var D of Gt(L))Wn.call(L,D)&&Qt(W,D,L[D]);return W};(self.webpackChunkant_design_pro=self.webpackChunkant_design_pro||[]).push([[168],{66327:function(W,L,D){D.d(L,{Z:function(){return Yn}});function x(e,t){if(!!!e)throw new Error(t)}const Fe=10,Z=2;function m(e){return le(e,[])}function le(e,t){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return Ue(e,t);default:return String(e)}}function Ue(e,t){if(e===null)return"null";if(t.includes(e))return"[Circular]";const n=[...t,e];if(Me(e)){const i=e.toJSON();if(i!==e)return typeof i=="string"?i:le(i,n)}else if(Array.isArray(e))return Ve(e,n);return se(e,n)}function Me(e){return typeof e.toJSON=="function"}function se(e,t){const n=Object.entries(e);return n.length===0?"{}":t.length>Z?"["+$e(e)+"]":"{ "+n.map(([s,r])=>s+": "+le(r,t)).join(", ")+" }"}function Ve(e,t){if(e.length===0)return"[]";if(t.length>Z)return"[Array]";const n=Math.min(Fe,e.length),i=e.length-n,s=[];for(let r=0;r<n;++r)s.push(le(e[r],t));return i===1?s.push("... 1 more item"):i>1&&s.push(`... ${i} more items`),"["+s.join(", ")+"]"}function $e(e){const t=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if(t==="Object"&&typeof e.constructor=="function"){const n=e.constructor.name;if(typeof n=="string"&&n!=="")return n}return t}function K(e){return typeof e=="object"&&e!==null}function re(e,t,n){const i=Object.create(null);for(const s of e)i[t(s)]=n(s);return i}function _e(e,t){if(!!!e)throw new Error(t!=null?t:"Unexpected invariant triggered.")}const Yt=/\r\n|[\n\r]/g;function je(e,t){let n=0,i=1;for(const s of e.body.matchAll(Yt)){if(typeof s.index=="number"||_e(!1),s.index>=t)break;n=s.index+s[0].length,i+=1}return{line:i,column:t+1-n}}function qt(e){return et(e.source,je(e.source,e.start))}function et(e,t){const n=e.locationOffset.column-1,i="".padStart(n)+e.body,s=t.line-1,r=e.locationOffset.line-1,a=t.line+r,l=t.line===1?n:0,p=t.column+l,h=`${e.name}:${a}:${p}
`,d=i.split(/\r\n|[\n\r]/g),T=d[s];if(T.length>120){const E=Math.floor(p/80),S=p%80,_=[];for(let k=0;k<T.length;k+=80)_.push(T.slice(k,k+80));return h+tt([[`${a} |`,_[0]],..._.slice(1,E+1).map(k=>["|",k]),["|","^".padStart(S)],["|",_[E+1]]])}return h+tt([[`${a-1} |`,d[s-1]],[`${a} |`,T],["|","^".padStart(p)],[`${a+1} |`,d[s+1]]])}function tt(e){const t=e.filter(([i,s])=>s!==void 0),n=Math.max(...t.map(([i])=>i.length));return t.map(([i,s])=>i.padStart(n)+(s?" "+s:"")).join(`
`)}function zt(e){const t=e[0];return t==null||"kind"in t||"length"in t?{nodes:t,source:e[1],positions:e[2],path:e[3],originalError:e[4],extensions:e[5]}:t}class O extends Error{constructor(t,...n){var i,s,r;const{nodes:a,source:l,positions:p,path:h,originalError:d,extensions:T}=zt(n);super(t),this.name="GraphQLError",this.path=h!=null?h:void 0,this.originalError=d!=null?d:void 0,this.nodes=nt(Array.isArray(a)?a:a?[a]:void 0);const E=nt((i=this.nodes)===null||i===void 0?void 0:i.map(_=>_.loc).filter(_=>_!=null));this.source=l!=null?l:E==null||(s=E[0])===null||s===void 0?void 0:s.source,this.positions=p!=null?p:E==null?void 0:E.map(_=>_.start),this.locations=p&&l?p.map(_=>je(l,_)):E==null?void 0:E.map(_=>je(_.source,_.start));const S=K(d==null?void 0:d.extensions)?d==null?void 0:d.extensions:void 0;this.extensions=(r=T!=null?T:S)!==null&&r!==void 0?r:Object.create(null),Object.defineProperties(this,{message:{writable:!0,enumerable:!0},name:{enumerable:!1},nodes:{enumerable:!1},source:{enumerable:!1},positions:{enumerable:!1},originalError:{enumerable:!1}}),d!=null&&d.stack?Object.defineProperty(this,"stack",{value:d.stack,writable:!0,configurable:!0}):Error.captureStackTrace?Error.captureStackTrace(this,O):Object.defineProperty(this,"stack",{value:Error().stack,writable:!0,configurable:!0})}get[Symbol.toStringTag](){return"GraphQLError"}toString(){let t=this.message;if(this.nodes)for(const n of this.nodes)n.loc&&(t+=`

`+qt(n.loc));else if(this.source&&this.locations)for(const n of this.locations)t+=`

`+et(this.source,n);return t}toJSON(){const t={message:this.message};return this.locations!=null&&(t.locations=this.locations),this.path!=null&&(t.path=this.path),this.extensions!=null&&Object.keys(this.extensions).length>0&&(t.extensions=this.extensions),t}}function nt(e){return e===void 0||e.length===0?void 0:e}function Zn(e){return e.toString()}function Kn(e){return e.toJSON()}function w(e,t,n){return new O(`Syntax Error: ${n}`,{source:e,positions:[t]})}class Xt{constructor(t,n,i){this.start=t.start,this.end=n.end,this.startToken=t,this.endToken=n,this.source=i}get[Symbol.toStringTag](){return"Location"}toJSON(){return{start:this.start,end:this.end}}}class it{constructor(t,n,i,s,r,a){this.kind=t,this.start=n,this.end=i,this.line=s,this.column=r,this.value=a,this.prev=null,this.next=null}get[Symbol.toStringTag](){return"Token"}toJSON(){return{kind:this.kind,value:this.value,line:this.line,column:this.column}}}const st={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},Ht=new Set(Object.keys(st));function rt(e){const t=e==null?void 0:e.kind;return typeof t=="string"&&Ht.has(t)}var ee;(function(e){e.QUERY="query",e.MUTATION="mutation",e.SUBSCRIPTION="subscription"})(ee||(ee={}));var I;(function(e){e.QUERY="QUERY",e.MUTATION="MUTATION",e.SUBSCRIPTION="SUBSCRIPTION",e.FIELD="FIELD",e.FRAGMENT_DEFINITION="FRAGMENT_DEFINITION",e.FRAGMENT_SPREAD="FRAGMENT_SPREAD",e.INLINE_FRAGMENT="INLINE_FRAGMENT",e.VARIABLE_DEFINITION="VARIABLE_DEFINITION",e.SCHEMA="SCHEMA",e.SCALAR="SCALAR",e.OBJECT="OBJECT",e.FIELD_DEFINITION="FIELD_DEFINITION",e.ARGUMENT_DEFINITION="ARGUMENT_DEFINITION",e.INTERFACE="INTERFACE",e.UNION="UNION",e.ENUM="ENUM",e.ENUM_VALUE="ENUM_VALUE",e.INPUT_OBJECT="INPUT_OBJECT",e.INPUT_FIELD_DEFINITION="INPUT_FIELD_DEFINITION"})(I||(I={}));var u;(function(e){e.NAME="Name",e.DOCUMENT="Document",e.OPERATION_DEFINITION="OperationDefinition",e.VARIABLE_DEFINITION="VariableDefinition",e.SELECTION_SET="SelectionSet",e.FIELD="Field",e.ARGUMENT="Argument",e.FRAGMENT_SPREAD="FragmentSpread",e.INLINE_FRAGMENT="InlineFragment",e.FRAGMENT_DEFINITION="FragmentDefinition",e.VARIABLE="Variable",e.INT="IntValue",e.FLOAT="FloatValue",e.STRING="StringValue",e.BOOLEAN="BooleanValue",e.NULL="NullValue",e.ENUM="EnumValue",e.LIST="ListValue",e.OBJECT="ObjectValue",e.OBJECT_FIELD="ObjectField",e.DIRECTIVE="Directive",e.NAMED_TYPE="NamedType",e.LIST_TYPE="ListType",e.NON_NULL_TYPE="NonNullType",e.SCHEMA_DEFINITION="SchemaDefinition",e.OPERATION_TYPE_DEFINITION="OperationTypeDefinition",e.SCALAR_TYPE_DEFINITION="ScalarTypeDefinition",e.OBJECT_TYPE_DEFINITION="ObjectTypeDefinition",e.FIELD_DEFINITION="FieldDefinition",e.INPUT_VALUE_DEFINITION="InputValueDefinition",e.INTERFACE_TYPE_DEFINITION="InterfaceTypeDefinition",e.UNION_TYPE_DEFINITION="UnionTypeDefinition",e.ENUM_TYPE_DEFINITION="EnumTypeDefinition",e.ENUM_VALUE_DEFINITION="EnumValueDefinition",e.INPUT_OBJECT_TYPE_DEFINITION="InputObjectTypeDefinition",e.DIRECTIVE_DEFINITION="DirectiveDefinition",e.SCHEMA_EXTENSION="SchemaExtension",e.SCALAR_TYPE_EXTENSION="ScalarTypeExtension",e.OBJECT_TYPE_EXTENSION="ObjectTypeExtension",e.INTERFACE_TYPE_EXTENSION="InterfaceTypeExtension",e.UNION_TYPE_EXTENSION="UnionTypeExtension",e.ENUM_TYPE_EXTENSION="EnumTypeExtension",e.INPUT_OBJECT_TYPE_EXTENSION="InputObjectTypeExtension"})(u||(u={}));function Be(e){return e===9||e===32}function me(e){return e>=48&&e<=57}function ot(e){return e>=97&&e<=122||e>=65&&e<=90}function Pe(e){return ot(e)||e===95}function at(e){return ot(e)||me(e)||e===95}function Wt(e){var t;let n=Number.MAX_SAFE_INTEGER,i=null,s=-1;for(let a=0;a<e.length;++a){var r;const l=e[a],p=Zt(l);p!==l.length&&(i=(r=i)!==null&&r!==void 0?r:a,s=a,a!==0&&p<n&&(n=p))}return e.map((a,l)=>l===0?a:a.slice(n)).slice((t=i)!==null&&t!==void 0?t:0,s+1)}function Zt(e){let t=0;for(;t<e.length&&Be(e.charCodeAt(t));)++t;return t}function ei(e){if(e==="")return!0;let t=!0,n=!1,i=!0,s=!1;for(let r=0;r<e.length;++r)switch(e.codePointAt(r)){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 11:case 12:case 14:case 15:return!1;case 13:return!1;case 10:if(t&&!s)return!1;s=!0,t=!0,n=!1;break;case 9:case 32:n||(n=t);break;default:i&&(i=n),t=!1}return!(t||i&&s)}function Kt(e,t){const n=e.replace(/"""/g,'\\"""'),i=n.split(/\r\n|[\n\r]/g),s=i.length===1,r=i.length>1&&i.slice(1).every(S=>S.length===0||Be(S.charCodeAt(0))),a=n.endsWith('\\"""'),l=e.endsWith('"')&&!a,p=e.endsWith("\\"),h=l||p,d=!(t!=null&&t.minimize)&&(!s||e.length>70||h||r||a);let T="";const E=s&&Be(e.charCodeAt(0));return(d&&!E||r)&&(T+=`
`),T+=n,(d||h)&&(T+=`
`),'"""'+T+'"""'}var o;(function(e){e.SOF="<SOF>",e.EOF="<EOF>",e.BANG="!",e.DOLLAR="$",e.AMP="&",e.PAREN_L="(",e.PAREN_R=")",e.SPREAD="...",e.COLON=":",e.EQUALS="=",e.AT="@",e.BRACKET_L="[",e.BRACKET_R="]",e.BRACE_L="{",e.PIPE="|",e.BRACE_R="}",e.NAME="Name",e.INT="Int",e.FLOAT="Float",e.STRING="String",e.BLOCK_STRING="BlockString",e.COMMENT="Comment"})(o||(o={}));class en{constructor(t){const n=new it(o.SOF,0,0,0,0);this.source=t,this.lastToken=n,this.token=n,this.line=1,this.lineStart=0}get[Symbol.toStringTag](){return"Lexer"}advance(){return this.lastToken=this.token,this.token=this.lookahead()}lookahead(){let t=this.token;if(t.kind!==o.EOF)do if(t.next)t=t.next;else{const n=nn(this,t.end);t.next=n,n.prev=t,t=n}while(t.kind===o.COMMENT);return t}}function tn(e){return e===o.BANG||e===o.DOLLAR||e===o.AMP||e===o.PAREN_L||e===o.PAREN_R||e===o.SPREAD||e===o.COLON||e===o.EQUALS||e===o.AT||e===o.BRACKET_L||e===o.BRACKET_R||e===o.BRACE_L||e===o.PIPE||e===o.BRACE_R}function pe(e){return e>=0&&e<=55295||e>=57344&&e<=1114111}function xe(e,t){return ct(e.charCodeAt(t))&&ut(e.charCodeAt(t+1))}function ct(e){return e>=55296&&e<=56319}function ut(e){return e>=56320&&e<=57343}function oe(e,t){const n=e.source.body.codePointAt(t);if(n===void 0)return o.EOF;if(n>=32&&n<=126){const i=String.fromCodePoint(n);return i==='"'?`'"'`:`"${i}"`}return"U+"+n.toString(16).toUpperCase().padStart(4,"0")}function A(e,t,n,i,s){const r=e.line,a=1+n-e.lineStart;return new it(t,n,i,r,a,s)}function nn(e,t){const n=e.source.body,i=n.length;let s=t;for(;s<i;){const r=n.charCodeAt(s);switch(r){case 65279:case 9:case 32:case 44:++s;continue;case 10:++s,++e.line,e.lineStart=s;continue;case 13:n.charCodeAt(s+1)===10?s+=2:++s,++e.line,e.lineStart=s;continue;case 35:return sn(e,s);case 33:return A(e,o.BANG,s,s+1);case 36:return A(e,o.DOLLAR,s,s+1);case 38:return A(e,o.AMP,s,s+1);case 40:return A(e,o.PAREN_L,s,s+1);case 41:return A(e,o.PAREN_R,s,s+1);case 46:if(n.charCodeAt(s+1)===46&&n.charCodeAt(s+2)===46)return A(e,o.SPREAD,s,s+3);break;case 58:return A(e,o.COLON,s,s+1);case 61:return A(e,o.EQUALS,s,s+1);case 64:return A(e,o.AT,s,s+1);case 91:return A(e,o.BRACKET_L,s,s+1);case 93:return A(e,o.BRACKET_R,s,s+1);case 123:return A(e,o.BRACE_L,s,s+1);case 124:return A(e,o.PIPE,s,s+1);case 125:return A(e,o.BRACE_R,s,s+1);case 34:return n.charCodeAt(s+1)===34&&n.charCodeAt(s+2)===34?ln(e,s):on(e,s)}if(me(r)||r===45)return rn(e,s,r);if(Pe(r))return pn(e,s);throw w(e.source,s,r===39?`Unexpected single quote character ('), did you mean to use a double quote (")?`:pe(r)||xe(n,s)?`Unexpected character: ${oe(e,s)}.`:`Invalid character: ${oe(e,s)}.`)}return A(e,o.EOF,i,i)}function sn(e,t){const n=e.source.body,i=n.length;let s=t+1;for(;s<i;){const r=n.charCodeAt(s);if(r===10||r===13)break;if(pe(r))++s;else if(xe(n,s))s+=2;else break}return A(e,o.COMMENT,t,s,n.slice(t+1,s))}function rn(e,t,n){const i=e.source.body;let s=t,r=n,a=!1;if(r===45&&(r=i.charCodeAt(++s)),r===48){if(r=i.charCodeAt(++s),me(r))throw w(e.source,s,`Invalid number, unexpected digit after 0: ${oe(e,s)}.`)}else s=Ge(e,s,r),r=i.charCodeAt(s);if(r===46&&(a=!0,r=i.charCodeAt(++s),s=Ge(e,s,r),r=i.charCodeAt(s)),(r===69||r===101)&&(a=!0,r=i.charCodeAt(++s),(r===43||r===45)&&(r=i.charCodeAt(++s)),s=Ge(e,s,r),r=i.charCodeAt(s)),r===46||Pe(r))throw w(e.source,s,`Invalid number, expected digit but got: ${oe(e,s)}.`);return A(e,a?o.FLOAT:o.INT,t,s,i.slice(t,s))}function Ge(e,t,n){if(!me(n))throw w(e.source,t,`Invalid number, expected digit but got: ${oe(e,t)}.`);const i=e.source.body;let s=t+1;for(;me(i.charCodeAt(s));)++s;return s}function on(e,t){const n=e.source.body,i=n.length;let s=t+1,r=s,a="";for(;s<i;){const l=n.charCodeAt(s);if(l===34)return a+=n.slice(r,s),A(e,o.STRING,t,s+1,a);if(l===92){a+=n.slice(r,s);const p=n.charCodeAt(s+1)===117?n.charCodeAt(s+2)===123?an(e,s):cn(e,s):un(e,s);a+=p.value,s+=p.size,r=s;continue}if(l===10||l===13)break;if(pe(l))++s;else if(xe(n,s))s+=2;else throw w(e.source,s,`Invalid character within String: ${oe(e,s)}.`)}throw w(e.source,s,"Unterminated string.")}function an(e,t){const n=e.source.body;let i=0,s=3;for(;s<12;){const r=n.charCodeAt(t+s++);if(r===125){if(s<5||!pe(i))break;return{value:String.fromCodePoint(i),size:s}}if(i=i<<4|Te(r),i<0)break}throw w(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+s)}".`)}function cn(e,t){const n=e.source.body,i=lt(n,t+2);if(pe(i))return{value:String.fromCodePoint(i),size:6};if(ct(i)&&n.charCodeAt(t+6)===92&&n.charCodeAt(t+7)===117){const s=lt(n,t+8);if(ut(s))return{value:String.fromCodePoint(i,s),size:12}}throw w(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+6)}".`)}function lt(e,t){return Te(e.charCodeAt(t))<<12|Te(e.charCodeAt(t+1))<<8|Te(e.charCodeAt(t+2))<<4|Te(e.charCodeAt(t+3))}function Te(e){return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:-1}function un(e,t){const n=e.source.body;switch(n.charCodeAt(t+1)){case 34:return{value:'"',size:2};case 92:return{value:"\\",size:2};case 47:return{value:"/",size:2};case 98:return{value:"\b",size:2};case 102:return{value:"\f",size:2};case 110:return{value:`
`,size:2};case 114:return{value:"\r",size:2};case 116:return{value:"	",size:2}}throw w(e.source,t,`Invalid character escape sequence: "${n.slice(t,t+2)}".`)}function ln(e,t){const n=e.source.body,i=n.length;let s=e.lineStart,r=t+3,a=r,l="";const p=[];for(;r<i;){const h=n.charCodeAt(r);if(h===34&&n.charCodeAt(r+1)===34&&n.charCodeAt(r+2)===34){l+=n.slice(a,r),p.push(l);const d=A(e,o.BLOCK_STRING,t,r+3,Wt(p).join(`
`));return e.line+=p.length-1,e.lineStart=s,d}if(h===92&&n.charCodeAt(r+1)===34&&n.charCodeAt(r+2)===34&&n.charCodeAt(r+3)===34){l+=n.slice(a,r),a=r+1,r+=4;continue}if(h===10||h===13){l+=n.slice(a,r),p.push(l),h===13&&n.charCodeAt(r+1)===10?r+=2:++r,l="",a=r,s=r;continue}if(pe(h))++r;else if(xe(n,r))r+=2;else throw w(e.source,r,`Invalid character within String: ${oe(e,r)}.`)}throw w(e.source,r,"Unterminated string.")}function pn(e,t){const n=e.source.body,i=n.length;let s=t+1;for(;s<i;){const r=n.charCodeAt(s);if(at(r))++s;else break}return A(e,o.NAME,t,s,n.slice(t,s))}const J=globalThis.process&&!0?function(t,n){return t instanceof n}:function(t,n){if(t instanceof n)return!0;if(typeof t=="object"&&t!==null){var i;const s=n.prototype[Symbol.toStringTag],r=Symbol.toStringTag in t?t[Symbol.toStringTag]:(i=t.constructor)===null||i===void 0?void 0:i.name;if(s===r){const a=m(t);throw new Error(`Cannot use ${s} "${a}" from another module or realm.

Ensure that there is only one instance of "graphql" in the node_modules
directory. If different versions of "graphql" are the dependencies of other
relied on modules, use "resolutions" to ensure only one version is installed.

https://yarnpkg.com/en/docs/selective-version-resolutions

Duplicate "graphql" modules cannot be used at the same time since different
versions may have different capabilities and behavior. The data from one
version used in the function from another could produce confusing and
spurious results.`)}}return!1};class pt{constructor(t,n="GraphQL request",i={line:1,column:1}){typeof t=="string"||x(!1,`Body must be a string. Received: ${m(t)}.`),this.body=t,this.name=n,this.locationOffset=i,this.locationOffset.line>0||x(!1,"line in locationOffset is 1-indexed and must be positive."),this.locationOffset.column>0||x(!1,"column in locationOffset is 1-indexed and must be positive.")}get[Symbol.toStringTag](){return"Source"}}function dn(e){return J(e,pt)}function ni(e,t){const n=new Oe(e,t),i=n.parseDocument();return Object.defineProperty(i,"tokenCount",{enumerable:!1,value:n.tokenCount}),i}function fn(e,t){const n=new Oe(e,t);n.expectToken(o.SOF);const i=n.parseValueLiteral(!1);return n.expectToken(o.EOF),i}function ii(e,t){const n=new Oe(e,t);n.expectToken(TokenKind.SOF);const i=n.parseConstValueLiteral();return n.expectToken(TokenKind.EOF),i}function si(e,t){const n=new Oe(e,t);n.expectToken(TokenKind.SOF);const i=n.parseTypeReference();return n.expectToken(TokenKind.EOF),i}class Oe{constructor(t,n={}){const i=dn(t)?t:new pt(t);this._lexer=new en(i),this._options=n,this._tokenCounter=0}get tokenCount(){return this._tokenCounter}parseName(){const t=this.expectToken(o.NAME);return this.node(t,{kind:u.NAME,value:t.value})}parseDocument(){return this.node(this._lexer.token,{kind:u.DOCUMENT,definitions:this.many(o.SOF,this.parseDefinition,o.EOF)})}parseDefinition(){if(this.peek(o.BRACE_L))return this.parseOperationDefinition();const t=this.peekDescription(),n=t?this._lexer.lookahead():this._lexer.token;if(n.kind===o.NAME){switch(n.value){case"schema":return this.parseSchemaDefinition();case"scalar":return this.parseScalarTypeDefinition();case"type":return this.parseObjectTypeDefinition();case"interface":return this.parseInterfaceTypeDefinition();case"union":return this.parseUnionTypeDefinition();case"enum":return this.parseEnumTypeDefinition();case"input":return this.parseInputObjectTypeDefinition();case"directive":return this.parseDirectiveDefinition()}if(t)throw w(this._lexer.source,this._lexer.token.start,"Unexpected description, descriptions are supported only on type definitions.");switch(n.value){case"query":case"mutation":case"subscription":return this.parseOperationDefinition();case"fragment":return this.parseFragmentDefinition();case"extend":return this.parseTypeSystemExtension()}}throw this.unexpected(n)}parseOperationDefinition(){const t=this._lexer.token;if(this.peek(o.BRACE_L))return this.node(t,{kind:u.OPERATION_DEFINITION,operation:ee.QUERY,name:void 0,variableDefinitions:[],directives:[],selectionSet:this.parseSelectionSet()});const n=this.parseOperationType();let i;return this.peek(o.NAME)&&(i=this.parseName()),this.node(t,{kind:u.OPERATION_DEFINITION,operation:n,name:i,variableDefinitions:this.parseVariableDefinitions(),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseOperationType(){const t=this.expectToken(o.NAME);switch(t.value){case"query":return ee.QUERY;case"mutation":return ee.MUTATION;case"subscription":return ee.SUBSCRIPTION}throw this.unexpected(t)}parseVariableDefinitions(){return this.optionalMany(o.PAREN_L,this.parseVariableDefinition,o.PAREN_R)}parseVariableDefinition(){return this.node(this._lexer.token,{kind:u.VARIABLE_DEFINITION,variable:this.parseVariable(),type:(this.expectToken(o.COLON),this.parseTypeReference()),defaultValue:this.expectOptionalToken(o.EQUALS)?this.parseConstValueLiteral():void 0,directives:this.parseConstDirectives()})}parseVariable(){const t=this._lexer.token;return this.expectToken(o.DOLLAR),this.node(t,{kind:u.VARIABLE,name:this.parseName()})}parseSelectionSet(){return this.node(this._lexer.token,{kind:u.SELECTION_SET,selections:this.many(o.BRACE_L,this.parseSelection,o.BRACE_R)})}parseSelection(){return this.peek(o.SPREAD)?this.parseFragment():this.parseField()}parseField(){const t=this._lexer.token,n=this.parseName();let i,s;return this.expectOptionalToken(o.COLON)?(i=n,s=this.parseName()):s=n,this.node(t,{kind:u.FIELD,alias:i,name:s,arguments:this.parseArguments(!1),directives:this.parseDirectives(!1),selectionSet:this.peek(o.BRACE_L)?this.parseSelectionSet():void 0})}parseArguments(t){const n=t?this.parseConstArgument:this.parseArgument;return this.optionalMany(o.PAREN_L,n,o.PAREN_R)}parseArgument(t=!1){const n=this._lexer.token,i=this.parseName();return this.expectToken(o.COLON),this.node(n,{kind:u.ARGUMENT,name:i,value:this.parseValueLiteral(t)})}parseConstArgument(){return this.parseArgument(!0)}parseFragment(){const t=this._lexer.token;this.expectToken(o.SPREAD);const n=this.expectOptionalKeyword("on");return!n&&this.peek(o.NAME)?this.node(t,{kind:u.FRAGMENT_SPREAD,name:this.parseFragmentName(),directives:this.parseDirectives(!1)}):this.node(t,{kind:u.INLINE_FRAGMENT,typeCondition:n?this.parseNamedType():void 0,directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentDefinition(){const t=this._lexer.token;return this.expectKeyword("fragment"),this._options.allowLegacyFragmentVariables===!0?this.node(t,{kind:u.FRAGMENT_DEFINITION,name:this.parseFragmentName(),variableDefinitions:this.parseVariableDefinitions(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()}):this.node(t,{kind:u.FRAGMENT_DEFINITION,name:this.parseFragmentName(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentName(){if(this._lexer.token.value==="on")throw this.unexpected();return this.parseName()}parseValueLiteral(t){const n=this._lexer.token;switch(n.kind){case o.BRACKET_L:return this.parseList(t);case o.BRACE_L:return this.parseObject(t);case o.INT:return this.advanceLexer(),this.node(n,{kind:u.INT,value:n.value});case o.FLOAT:return this.advanceLexer(),this.node(n,{kind:u.FLOAT,value:n.value});case o.STRING:case o.BLOCK_STRING:return this.parseStringLiteral();case o.NAME:switch(this.advanceLexer(),n.value){case"true":return this.node(n,{kind:u.BOOLEAN,value:!0});case"false":return this.node(n,{kind:u.BOOLEAN,value:!1});case"null":return this.node(n,{kind:u.NULL});default:return this.node(n,{kind:u.ENUM,value:n.value})}case o.DOLLAR:if(t)if(this.expectToken(o.DOLLAR),this._lexer.token.kind===o.NAME){const i=this._lexer.token.value;throw w(this._lexer.source,n.start,`Unexpected variable "$${i}" in constant value.`)}else throw this.unexpected(n);return this.parseVariable();default:throw this.unexpected()}}parseConstValueLiteral(){return this.parseValueLiteral(!0)}parseStringLiteral(){const t=this._lexer.token;return this.advanceLexer(),this.node(t,{kind:u.STRING,value:t.value,block:t.kind===o.BLOCK_STRING})}parseList(t){const n=()=>this.parseValueLiteral(t);return this.node(this._lexer.token,{kind:u.LIST,values:this.any(o.BRACKET_L,n,o.BRACKET_R)})}parseObject(t){const n=()=>this.parseObjectField(t);return this.node(this._lexer.token,{kind:u.OBJECT,fields:this.any(o.BRACE_L,n,o.BRACE_R)})}parseObjectField(t){const n=this._lexer.token,i=this.parseName();return this.expectToken(o.COLON),this.node(n,{kind:u.OBJECT_FIELD,name:i,value:this.parseValueLiteral(t)})}parseDirectives(t){const n=[];for(;this.peek(o.AT);)n.push(this.parseDirective(t));return n}parseConstDirectives(){return this.parseDirectives(!0)}parseDirective(t){const n=this._lexer.token;return this.expectToken(o.AT),this.node(n,{kind:u.DIRECTIVE,name:this.parseName(),arguments:this.parseArguments(t)})}parseTypeReference(){const t=this._lexer.token;let n;if(this.expectOptionalToken(o.BRACKET_L)){const i=this.parseTypeReference();this.expectToken(o.BRACKET_R),n=this.node(t,{kind:u.LIST_TYPE,type:i})}else n=this.parseNamedType();return this.expectOptionalToken(o.BANG)?this.node(t,{kind:u.NON_NULL_TYPE,type:n}):n}parseNamedType(){return this.node(this._lexer.token,{kind:u.NAMED_TYPE,name:this.parseName()})}peekDescription(){return this.peek(o.STRING)||this.peek(o.BLOCK_STRING)}parseDescription(){if(this.peekDescription())return this.parseStringLiteral()}parseSchemaDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("schema");const i=this.parseConstDirectives(),s=this.many(o.BRACE_L,this.parseOperationTypeDefinition,o.BRACE_R);return this.node(t,{kind:u.SCHEMA_DEFINITION,description:n,directives:i,operationTypes:s})}parseOperationTypeDefinition(){const t=this._lexer.token,n=this.parseOperationType();this.expectToken(o.COLON);const i=this.parseNamedType();return this.node(t,{kind:u.OPERATION_TYPE_DEFINITION,operation:n,type:i})}parseScalarTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("scalar");const i=this.parseName(),s=this.parseConstDirectives();return this.node(t,{kind:u.SCALAR_TYPE_DEFINITION,description:n,name:i,directives:s})}parseObjectTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("type");const i=this.parseName(),s=this.parseImplementsInterfaces(),r=this.parseConstDirectives(),a=this.parseFieldsDefinition();return this.node(t,{kind:u.OBJECT_TYPE_DEFINITION,description:n,name:i,interfaces:s,directives:r,fields:a})}parseImplementsInterfaces(){return this.expectOptionalKeyword("implements")?this.delimitedMany(o.AMP,this.parseNamedType):[]}parseFieldsDefinition(){return this.optionalMany(o.BRACE_L,this.parseFieldDefinition,o.BRACE_R)}parseFieldDefinition(){const t=this._lexer.token,n=this.parseDescription(),i=this.parseName(),s=this.parseArgumentDefs();this.expectToken(o.COLON);const r=this.parseTypeReference(),a=this.parseConstDirectives();return this.node(t,{kind:u.FIELD_DEFINITION,description:n,name:i,arguments:s,type:r,directives:a})}parseArgumentDefs(){return this.optionalMany(o.PAREN_L,this.parseInputValueDef,o.PAREN_R)}parseInputValueDef(){const t=this._lexer.token,n=this.parseDescription(),i=this.parseName();this.expectToken(o.COLON);const s=this.parseTypeReference();let r;this.expectOptionalToken(o.EQUALS)&&(r=this.parseConstValueLiteral());const a=this.parseConstDirectives();return this.node(t,{kind:u.INPUT_VALUE_DEFINITION,description:n,name:i,type:s,defaultValue:r,directives:a})}parseInterfaceTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("interface");const i=this.parseName(),s=this.parseImplementsInterfaces(),r=this.parseConstDirectives(),a=this.parseFieldsDefinition();return this.node(t,{kind:u.INTERFACE_TYPE_DEFINITION,description:n,name:i,interfaces:s,directives:r,fields:a})}parseUnionTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("union");const i=this.parseName(),s=this.parseConstDirectives(),r=this.parseUnionMemberTypes();return this.node(t,{kind:u.UNION_TYPE_DEFINITION,description:n,name:i,directives:s,types:r})}parseUnionMemberTypes(){return this.expectOptionalToken(o.EQUALS)?this.delimitedMany(o.PIPE,this.parseNamedType):[]}parseEnumTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("enum");const i=this.parseName(),s=this.parseConstDirectives(),r=this.parseEnumValuesDefinition();return this.node(t,{kind:u.ENUM_TYPE_DEFINITION,description:n,name:i,directives:s,values:r})}parseEnumValuesDefinition(){return this.optionalMany(o.BRACE_L,this.parseEnumValueDefinition,o.BRACE_R)}parseEnumValueDefinition(){const t=this._lexer.token,n=this.parseDescription(),i=this.parseEnumValueName(),s=this.parseConstDirectives();return this.node(t,{kind:u.ENUM_VALUE_DEFINITION,description:n,name:i,directives:s})}parseEnumValueName(){if(this._lexer.token.value==="true"||this._lexer.token.value==="false"||this._lexer.token.value==="null")throw w(this._lexer.source,this._lexer.token.start,`${be(this._lexer.token)} is reserved and cannot be used for an enum value.`);return this.parseName()}parseInputObjectTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("input");const i=this.parseName(),s=this.parseConstDirectives(),r=this.parseInputFieldsDefinition();return this.node(t,{kind:u.INPUT_OBJECT_TYPE_DEFINITION,description:n,name:i,directives:s,fields:r})}parseInputFieldsDefinition(){return this.optionalMany(o.BRACE_L,this.parseInputValueDef,o.BRACE_R)}parseTypeSystemExtension(){const t=this._lexer.lookahead();if(t.kind===o.NAME)switch(t.value){case"schema":return this.parseSchemaExtension();case"scalar":return this.parseScalarTypeExtension();case"type":return this.parseObjectTypeExtension();case"interface":return this.parseInterfaceTypeExtension();case"union":return this.parseUnionTypeExtension();case"enum":return this.parseEnumTypeExtension();case"input":return this.parseInputObjectTypeExtension()}throw this.unexpected(t)}parseSchemaExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("schema");const n=this.parseConstDirectives(),i=this.optionalMany(o.BRACE_L,this.parseOperationTypeDefinition,o.BRACE_R);if(n.length===0&&i.length===0)throw this.unexpected();return this.node(t,{kind:u.SCHEMA_EXTENSION,directives:n,operationTypes:i})}parseScalarTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("scalar");const n=this.parseName(),i=this.parseConstDirectives();if(i.length===0)throw this.unexpected();return this.node(t,{kind:u.SCALAR_TYPE_EXTENSION,name:n,directives:i})}parseObjectTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("type");const n=this.parseName(),i=this.parseImplementsInterfaces(),s=this.parseConstDirectives(),r=this.parseFieldsDefinition();if(i.length===0&&s.length===0&&r.length===0)throw this.unexpected();return this.node(t,{kind:u.OBJECT_TYPE_EXTENSION,name:n,interfaces:i,directives:s,fields:r})}parseInterfaceTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("interface");const n=this.parseName(),i=this.parseImplementsInterfaces(),s=this.parseConstDirectives(),r=this.parseFieldsDefinition();if(i.length===0&&s.length===0&&r.length===0)throw this.unexpected();return this.node(t,{kind:u.INTERFACE_TYPE_EXTENSION,name:n,interfaces:i,directives:s,fields:r})}parseUnionTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("union");const n=this.parseName(),i=this.parseConstDirectives(),s=this.parseUnionMemberTypes();if(i.length===0&&s.length===0)throw this.unexpected();return this.node(t,{kind:u.UNION_TYPE_EXTENSION,name:n,directives:i,types:s})}parseEnumTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("enum");const n=this.parseName(),i=this.parseConstDirectives(),s=this.parseEnumValuesDefinition();if(i.length===0&&s.length===0)throw this.unexpected();return this.node(t,{kind:u.ENUM_TYPE_EXTENSION,name:n,directives:i,values:s})}parseInputObjectTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("input");const n=this.parseName(),i=this.parseConstDirectives(),s=this.parseInputFieldsDefinition();if(i.length===0&&s.length===0)throw this.unexpected();return this.node(t,{kind:u.INPUT_OBJECT_TYPE_EXTENSION,name:n,directives:i,fields:s})}parseDirectiveDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("directive"),this.expectToken(o.AT);const i=this.parseName(),s=this.parseArgumentDefs(),r=this.expectOptionalKeyword("repeatable");this.expectKeyword("on");const a=this.parseDirectiveLocations();return this.node(t,{kind:u.DIRECTIVE_DEFINITION,description:n,name:i,arguments:s,repeatable:r,locations:a})}parseDirectiveLocations(){return this.delimitedMany(o.PIPE,this.parseDirectiveLocation)}parseDirectiveLocation(){const t=this._lexer.token,n=this.parseName();if(Object.prototype.hasOwnProperty.call(I,n.value))return n;throw this.unexpected(t)}node(t,n){return this._options.noLocation!==!0&&(n.loc=new Xt(t,this._lexer.lastToken,this._lexer.source)),n}peek(t){return this._lexer.token.kind===t}expectToken(t){const n=this._lexer.token;if(n.kind===t)return this.advanceLexer(),n;throw w(this._lexer.source,n.start,`Expected ${dt(t)}, found ${be(n)}.`)}expectOptionalToken(t){return this._lexer.token.kind===t?(this.advanceLexer(),!0):!1}expectKeyword(t){const n=this._lexer.token;if(n.kind===o.NAME&&n.value===t)this.advanceLexer();else throw w(this._lexer.source,n.start,`Expected "${t}", found ${be(n)}.`)}expectOptionalKeyword(t){const n=this._lexer.token;return n.kind===o.NAME&&n.value===t?(this.advanceLexer(),!0):!1}unexpected(t){const n=t!=null?t:this._lexer.token;return w(this._lexer.source,n.start,`Unexpected ${be(n)}.`)}any(t,n,i){this.expectToken(t);const s=[];for(;!this.expectOptionalToken(i);)s.push(n.call(this));return s}optionalMany(t,n,i){if(this.expectOptionalToken(t)){const s=[];do s.push(n.call(this));while(!this.expectOptionalToken(i));return s}return[]}many(t,n,i){this.expectToken(t);const s=[];do s.push(n.call(this));while(!this.expectOptionalToken(i));return s}delimitedMany(t,n){this.expectOptionalToken(t);const i=[];do i.push(n.call(this));while(this.expectOptionalToken(t));return i}advanceLexer(){const{maxTokens:t}=this._options,n=this._lexer.advance();if(n.kind!==o.EOF&&(++this._tokenCounter,t!==void 0&&this._tokenCounter>t))throw w(this._lexer.source,n.start,`Document contains more that ${t} tokens. Parsing aborted.`)}}function be(e){const t=e.value;return dt(e.kind)+(t!=null?` "${t}"`:"")}function dt(e){return tn(e)?`"${e}"`:e}const hn=5;function mn(e,t){const[n,i]=t?[e,t]:[void 0,e];let s=" Did you mean ";n&&(s+=n+" ");const r=i.map(p=>`"${p}"`);switch(r.length){case 0:return"";case 1:return s+r[0]+"?";case 2:return s+r[0]+" or "+r[1]+"?"}const a=r.slice(0,hn),l=a.pop();return s+a.join(", ")+", or "+l+"?"}function ft(e){return e}function ht(e,t){const n=Object.create(null);for(const i of e)n[t(i)]=i;return n}function ge(e,t){const n=Object.create(null);for(const i of Object.keys(e))n[i]=t(e[i],i);return n}function Tn(e,t){let n=0,i=0;for(;n<e.length&&i<t.length;){let s=e.charCodeAt(n),r=t.charCodeAt(i);if(Ae(s)&&Ae(r)){let a=0;do++n,a=a*10+s-Qe,s=e.charCodeAt(n);while(Ae(s)&&a>0);let l=0;do++i,l=l*10+r-Qe,r=t.charCodeAt(i);while(Ae(r)&&l>0);if(a<l)return-1;if(a>l)return 1}else{if(s<r)return-1;if(s>r)return 1;++n,++i}}return e.length-t.length}const Qe=48,yn=57;function Ae(e){return!isNaN(e)&&Qe<=e&&e<=yn}function En(e,t){const n=Object.create(null),i=new Nn(e),s=Math.floor(e.length*.4)+1;for(const r of t){const a=i.measure(r,s);a!==void 0&&(n[r]=a)}return Object.keys(n).sort((r,a)=>{const l=n[r]-n[a];return l!==0?l:Tn(r,a)})}class Nn{constructor(t){this._input=t,this._inputLowerCase=t.toLowerCase(),this._inputArray=mt(this._inputLowerCase),this._rows=[new Array(t.length+1).fill(0),new Array(t.length+1).fill(0),new Array(t.length+1).fill(0)]}measure(t,n){if(this._input===t)return 0;const i=t.toLowerCase();if(this._inputLowerCase===i)return 1;let s=mt(i),r=this._inputArray;if(s.length<r.length){const d=s;s=r,r=d}const a=s.length,l=r.length;if(a-l>n)return;const p=this._rows;for(let d=0;d<=l;d++)p[0][d]=d;for(let d=1;d<=a;d++){const T=p[(d-1)%3],E=p[d%3];let S=E[0]=d;for(let _=1;_<=l;_++){const k=s[d-1]===r[_-1]?0:1;let G=Math.min(T[_]+1,E[_-1]+1,T[_-1]+k);if(d>1&&_>1&&s[d-1]===r[_-2]&&s[d-2]===r[_-1]){const U=p[(d-2)%3][_-2];G=Math.min(G,U+1)}G<S&&(S=G),E[_]=G}if(S>n)return}const h=p[a%3][l];return h<=n?h:void 0}}function mt(e){const t=e.length,n=new Array(t);for(let i=0;i<t;++i)n[i]=e.charCodeAt(i);return n}function M(e){if(e==null)return Object.create(null);if(Object.getPrototypeOf(e)===null)return e;const t=Object.create(null);for(const[n,i]of Object.entries(e))t[n]=i;return t}function vn(e){return`"${e.replace(In,_n)}"`}const In=/[\x00-\x1f\x22\x5c\x7f-\x9f]/g;function _n(e){return xn[e.charCodeAt(0)]}const xn=["\\u0000","\\u0001","\\u0002","\\u0003","\\u0004","\\u0005","\\u0006","\\u0007","\\b","\\t","\\n","\\u000B","\\f","\\r","\\u000E","\\u000F","\\u0010","\\u0011","\\u0012","\\u0013","\\u0014","\\u0015","\\u0016","\\u0017","\\u0018","\\u0019","\\u001A","\\u001B","\\u001C","\\u001D","\\u001E","\\u001F","","",'\\"',"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\u007F","\\u0080","\\u0081","\\u0082","\\u0083","\\u0084","\\u0085","\\u0086","\\u0087","\\u0088","\\u0089","\\u008A","\\u008B","\\u008C","\\u008D","\\u008E","\\u008F","\\u0090","\\u0091","\\u0092","\\u0093","\\u0094","\\u0095","\\u0096","\\u0097","\\u0098","\\u0099","\\u009A","\\u009B","\\u009C","\\u009D","\\u009E","\\u009F"],ye=Object.freeze({});function On(e,t,n=st){const i=new Map;for(const U of Object.values(u))i.set(U,Je(t,U));let s,r=Array.isArray(e),a=[e],l=-1,p=[],h=e,d,T;const E=[],S=[];do{l++;const U=l===a.length,Re=U&&p.length!==0;if(U){if(d=S.length===0?void 0:E[E.length-1],h=T,T=S.pop(),Re)if(r){h=h.slice();let Q=0;for(const[Ie,he]of p){const Ce=Ie-Q;he===null?(h.splice(Ce,1),Q++):h[Ce]=he}}else{h=Object.defineProperties({},Object.getOwnPropertyDescriptors(h));for(const[Q,Ie]of p)h[Q]=Ie}l=s.index,a=s.keys,p=s.edits,r=s.inArray,s=s.prev}else if(T){if(d=r?l:a[l],h=T[d],h==null)continue;E.push(d)}let X;if(!Array.isArray(h)){var _,k;rt(h)||x(!1,`Invalid AST Node: ${m(h)}.`);const Q=U?(_=i.get(h.kind))===null||_===void 0?void 0:_.leave:(k=i.get(h.kind))===null||k===void 0?void 0:k.enter;if(X=Q==null?void 0:Q.call(t,h,d,T,E,S),X===ye)break;if(X===!1){if(!U){E.pop();continue}}else if(X!==void 0&&(p.push([d,X]),!U))if(rt(X))h=X;else{E.pop();continue}}if(X===void 0&&Re&&p.push([d,h]),U)E.pop();else{var G;s={inArray:r,index:l,keys:a,edits:p,prev:s},r=Array.isArray(h),a=r?h:(G=n[h.kind])!==null&&G!==void 0?G:[],l=-1,p=[],T&&S.push(T),T=h}}while(s!==void 0);return p.length!==0?p[p.length-1][1]:e}function ri(e){const t=new Array(e.length).fill(null),n=Object.create(null);for(const i of Object.values(Kind)){let s=!1;const r=new Array(e.length).fill(void 0),a=new Array(e.length).fill(void 0);for(let p=0;p<e.length;++p){const{enter:h,leave:d}=Je(e[p],i);s||(s=h!=null||d!=null),r[p]=h,a[p]=d}if(!s)continue;const l={enter(...p){const h=p[0];for(let T=0;T<e.length;T++)if(t[T]===null){var d;const E=(d=r[T])===null||d===void 0?void 0:d.apply(e[T],p);if(E===!1)t[T]=h;else if(E===ye)t[T]=ye;else if(E!==void 0)return E}},leave(...p){const h=p[0];for(let T=0;T<e.length;T++)if(t[T]===null){var d;const E=(d=a[T])===null||d===void 0?void 0:d.apply(e[T],p);if(E===ye)t[T]=ye;else if(E!==void 0&&E!==!1)return E}else t[T]===h&&(t[T]=null)}};n[i]=l}return n}function Je(e,t){const n=e[t];return typeof n=="object"?n:typeof n=="function"?{enter:n,leave:void 0}:{enter:e.enter,leave:e.leave}}function oi(e,t,n){const{enter:i,leave:s}=Je(e,t);return n?s:i}function ne(e){return On(e,gn)}const bn=80,gn={Name:{leave:e=>e.value},Variable:{leave:e=>"$"+e.name},Document:{leave:e=>f(e.definitions,`

`)},OperationDefinition:{leave(e){const t=N("(",f(e.variableDefinitions,", "),")"),n=f([e.operation,f([e.name,t]),f(e.directives," ")]," ");return(n==="query"?"":n+" ")+e.selectionSet}},VariableDefinition:{leave:({variable:e,type:t,defaultValue:n,directives:i})=>e+": "+t+N(" = ",n)+N(" ",f(i," "))},SelectionSet:{leave:({selections:e})=>$(e)},Field:{leave({alias:e,name:t,arguments:n,directives:i,selectionSet:s}){const r=N("",e,": ")+t;let a=r+N("(",f(n,", "),")");return a.length>bn&&(a=r+N(`(
`,we(f(n,`
`)),`
)`)),f([a,f(i," "),s]," ")}},Argument:{leave:({name:e,value:t})=>e+": "+t},FragmentSpread:{leave:({name:e,directives:t})=>"..."+e+N(" ",f(t," "))},InlineFragment:{leave:({typeCondition:e,directives:t,selectionSet:n})=>f(["...",N("on ",e),f(t," "),n]," ")},FragmentDefinition:{leave:({name:e,typeCondition:t,variableDefinitions:n,directives:i,selectionSet:s})=>`fragment ${e}${N("(",f(n,", "),")")} on ${t} ${N("",f(i," ")," ")}`+s},IntValue:{leave:({value:e})=>e},FloatValue:{leave:({value:e})=>e},StringValue:{leave:({value:e,block:t})=>t?Kt(e):vn(e)},BooleanValue:{leave:({value:e})=>e?"true":"false"},NullValue:{leave:()=>"null"},EnumValue:{leave:({value:e})=>e},ListValue:{leave:({values:e})=>"["+f(e,", ")+"]"},ObjectValue:{leave:({fields:e})=>"{"+f(e,", ")+"}"},ObjectField:{leave:({name:e,value:t})=>e+": "+t},Directive:{leave:({name:e,arguments:t})=>"@"+e+N("(",f(t,", "),")")},NamedType:{leave:({name:e})=>e},ListType:{leave:({type:e})=>"["+e+"]"},NonNullType:{leave:({type:e})=>e+"!"},SchemaDefinition:{leave:({description:e,directives:t,operationTypes:n})=>N("",e,`
`)+f(["schema",f(t," "),$(n)]," ")},OperationTypeDefinition:{leave:({operation:e,type:t})=>e+": "+t},ScalarTypeDefinition:{leave:({description:e,name:t,directives:n})=>N("",e,`
`)+f(["scalar",t,f(n," ")]," ")},ObjectTypeDefinition:{leave:({description:e,name:t,interfaces:n,directives:i,fields:s})=>N("",e,`
`)+f(["type",t,N("implements ",f(n," & ")),f(i," "),$(s)]," ")},FieldDefinition:{leave:({description:e,name:t,arguments:n,type:i,directives:s})=>N("",e,`
`)+t+(Tt(n)?N(`(
`,we(f(n,`
`)),`
)`):N("(",f(n,", "),")"))+": "+i+N(" ",f(s," "))},InputValueDefinition:{leave:({description:e,name:t,type:n,defaultValue:i,directives:s})=>N("",e,`
`)+f([t+": "+n,N("= ",i),f(s," ")]," ")},InterfaceTypeDefinition:{leave:({description:e,name:t,interfaces:n,directives:i,fields:s})=>N("",e,`
`)+f(["interface",t,N("implements ",f(n," & ")),f(i," "),$(s)]," ")},UnionTypeDefinition:{leave:({description:e,name:t,directives:n,types:i})=>N("",e,`
`)+f(["union",t,f(n," "),N("= ",f(i," | "))]," ")},EnumTypeDefinition:{leave:({description:e,name:t,directives:n,values:i})=>N("",e,`
`)+f(["enum",t,f(n," "),$(i)]," ")},EnumValueDefinition:{leave:({description:e,name:t,directives:n})=>N("",e,`
`)+f([t,f(n," ")]," ")},InputObjectTypeDefinition:{leave:({description:e,name:t,directives:n,fields:i})=>N("",e,`
`)+f(["input",t,f(n," "),$(i)]," ")},DirectiveDefinition:{leave:({description:e,name:t,arguments:n,repeatable:i,locations:s})=>N("",e,`
`)+"directive @"+t+(Tt(n)?N(`(
`,we(f(n,`
`)),`
)`):N("(",f(n,", "),")"))+(i?" repeatable":"")+" on "+f(s," | ")},SchemaExtension:{leave:({directives:e,operationTypes:t})=>f(["extend schema",f(e," "),$(t)]," ")},ScalarTypeExtension:{leave:({name:e,directives:t})=>f(["extend scalar",e,f(t," ")]," ")},ObjectTypeExtension:{leave:({name:e,interfaces:t,directives:n,fields:i})=>f(["extend type",e,N("implements ",f(t," & ")),f(n," "),$(i)]," ")},InterfaceTypeExtension:{leave:({name:e,interfaces:t,directives:n,fields:i})=>f(["extend interface",e,N("implements ",f(t," & ")),f(n," "),$(i)]," ")},UnionTypeExtension:{leave:({name:e,directives:t,types:n})=>f(["extend union",e,f(t," "),N("= ",f(n," | "))]," ")},EnumTypeExtension:{leave:({name:e,directives:t,values:n})=>f(["extend enum",e,f(t," "),$(n)]," ")},InputObjectTypeExtension:{leave:({name:e,directives:t,fields:n})=>f(["extend input",e,f(t," "),$(n)]," ")}};function f(e,t=""){var n;return(n=e==null?void 0:e.filter(i=>i).join(t))!==null&&n!==void 0?n:""}function $(e){return N(`{
`,we(f(e,`
`)),`
}`)}function N(e,t,n=""){return t!=null&&t!==""?e+t+n:""}function we(e){return N("  ",e.replace(/\n/g,`
  `))}function Tt(e){var t;return(t=e==null?void 0:e.some(n=>n.includes(`
`)))!==null&&t!==void 0?t:!1}function Ye(e,t){switch(e.kind){case u.NULL:return null;case u.INT:return parseInt(e.value,10);case u.FLOAT:return parseFloat(e.value);case u.STRING:case u.ENUM:case u.BOOLEAN:return e.value;case u.LIST:return e.values.map(n=>Ye(n,t));case u.OBJECT:return re(e.fields,n=>n.name.value,n=>Ye(n.value,t));case u.VARIABLE:return t==null?void 0:t[e.name.value]}}function j(e){if(e!=null||x(!1,"Must provide name."),typeof e=="string"||x(!1,"Expected name to be a string."),e.length===0)throw new O("Expected name to be a non-empty string.");for(let t=1;t<e.length;++t)if(!at(e.charCodeAt(t)))throw new O(`Names must only contain [_a-zA-Z0-9] but "${e}" does not.`);if(!Pe(e.charCodeAt(0)))throw new O(`Names must start with [_a-zA-Z] but "${e}" does not.`);return e}function An(e){if(e==="true"||e==="false"||e==="null")throw new O(`Enum values cannot be named: ${e}`);return j(e)}function qe(e){return ae(e)||Y(e)||R(e)||q(e)||te(e)||z(e)||de(e)||C(e)}function ai(e){if(!qe(e))throw new Error(`Expected ${inspect(e)} to be a GraphQL type.`);return e}function ae(e){return J(e,ce)}function ci(e){if(!ae(e))throw new Error(`Expected ${inspect(e)} to be a GraphQL Scalar type.`);return e}function Y(e){return J(e,ie)}function wn(e){if(!Y(e))throw new Error(`Expected ${m(e)} to be a GraphQL Object type.`);return e}function R(e){return J(e,gt)}function Sn(e){if(!R(e))throw new Error(`Expected ${m(e)} to be a GraphQL Interface type.`);return e}function q(e){return J(e,At)}function ui(e){if(!q(e))throw new Error(`Expected ${inspect(e)} to be a GraphQL Union type.`);return e}function te(e){return J(e,Le)}function li(e){if(!te(e))throw new Error(`Expected ${inspect(e)} to be a GraphQL Enum type.`);return e}function z(e){return J(e,St)}function pi(e){if(!z(e))throw new Error(`Expected ${inspect(e)} to be a GraphQL Input Object type.`);return e}function de(e){return J(e,V)}function di(e){if(!de(e))throw new Error(`Expected ${inspect(e)} to be a GraphQL List type.`);return e}function C(e){return J(e,v)}function fi(e){if(!C(e))throw new Error(`Expected ${inspect(e)} to be a GraphQL Non-Null type.`);return e}function ze(e){return ae(e)||te(e)||z(e)||Se(e)&&ze(e.ofType)}function hi(e){if(!ze(e))throw new Error(`Expected ${inspect(e)} to be a GraphQL input type.`);return e}function Xe(e){return ae(e)||Y(e)||R(e)||q(e)||te(e)||Se(e)&&Xe(e.ofType)}function mi(e){if(!Xe(e))throw new Error(`Expected ${inspect(e)} to be a GraphQL output type.`);return e}function He(e){return ae(e)||te(e)}function Ti(e){if(!He(e))throw new Error(`Expected ${inspect(e)} to be a GraphQL leaf type.`);return e}function Ln(e){return Y(e)||R(e)||q(e)}function yi(e){if(!Ln(e))throw new Error(`Expected ${inspect(e)} to be a GraphQL composite type.`);return e}function yt(e){return R(e)||q(e)}function Ei(e){if(!yt(e))throw new Error(`Expected ${inspect(e)} to be a GraphQL abstract type.`);return e}class V{constructor(t){qe(t)||x(!1,`Expected ${m(t)} to be a GraphQL type.`),this.ofType=t}get[Symbol.toStringTag](){return"GraphQLList"}toString(){return"["+String(this.ofType)+"]"}toJSON(){return this.toString()}}class v{constructor(t){Et(t)||x(!1,`Expected ${m(t)} to be a GraphQL nullable type.`),this.ofType=t}get[Symbol.toStringTag](){return"GraphQLNonNull"}toString(){return String(this.ofType)+"!"}toJSON(){return this.toString()}}function Se(e){return de(e)||C(e)}function Ni(e){if(!Se(e))throw new Error(`Expected ${inspect(e)} to be a GraphQL wrapping type.`);return e}function Et(e){return qe(e)&&!C(e)}function Dn(e){if(!Et(e))throw new Error(`Expected ${m(e)} to be a GraphQL nullable type.`);return e}function vi(e){if(e)return C(e)?e.ofType:e}function kn(e){return ae(e)||Y(e)||R(e)||q(e)||te(e)||z(e)}function Ii(e){if(!kn(e))throw new Error(`Expected ${inspect(e)} to be a GraphQL named type.`);return e}function Rn(e){if(e){let t=e;for(;Se(t);)t=t.ofType;return t}}function Nt(e){return typeof e=="function"?e():e}function vt(e){return typeof e=="function"?e():e}class ce{constructor(t){var n,i,s,r;const a=(n=t.parseValue)!==null&&n!==void 0?n:ft;this.name=j(t.name),this.description=t.description,this.specifiedByURL=t.specifiedByURL,this.serialize=(i=t.serialize)!==null&&i!==void 0?i:ft,this.parseValue=a,this.parseLiteral=(s=t.parseLiteral)!==null&&s!==void 0?s:(l,p)=>a(Ye(l,p)),this.extensions=M(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(r=t.extensionASTNodes)!==null&&r!==void 0?r:[],t.specifiedByURL==null||typeof t.specifiedByURL=="string"||x(!1,`${this.name} must provide "specifiedByURL" as a string, but got: ${m(t.specifiedByURL)}.`),t.serialize==null||typeof t.serialize=="function"||x(!1,`${this.name} must provide "serialize" function. If this custom Scalar is also used as an input type, ensure "parseValue" and "parseLiteral" functions are also provided.`),t.parseLiteral&&(typeof t.parseValue=="function"&&typeof t.parseLiteral=="function"||x(!1,`${this.name} must provide both "parseValue" and "parseLiteral" functions.`))}get[Symbol.toStringTag](){return"GraphQLScalarType"}toConfig(){return{name:this.name,description:this.description,specifiedByURL:this.specifiedByURL,serialize:this.serialize,parseValue:this.parseValue,parseLiteral:this.parseLiteral,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}class ie{constructor(t){var n;this.name=j(t.name),this.description=t.description,this.isTypeOf=t.isTypeOf,this.extensions=M(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._fields=()=>_t(t),this._interfaces=()=>It(t),t.isTypeOf==null||typeof t.isTypeOf=="function"||x(!1,`${this.name} must provide "isTypeOf" as a function, but got: ${m(t.isTypeOf)}.`)}get[Symbol.toStringTag](){return"GraphQLObjectType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}getInterfaces(){return typeof this._interfaces=="function"&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:Ot(this.getFields()),isTypeOf:this.isTypeOf,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function It(e){var t;const n=Nt((t=e.interfaces)!==null&&t!==void 0?t:[]);return Array.isArray(n)||x(!1,`${e.name} interfaces must be an Array or a function which returns an Array.`),n}function _t(e){const t=vt(e.fields);return fe(t)||x(!1,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`),ge(t,(n,i)=>{var s;fe(n)||x(!1,`${e.name}.${i} field config must be an object.`),n.resolve==null||typeof n.resolve=="function"||x(!1,`${e.name}.${i} field resolver must be a function if provided, but got: ${m(n.resolve)}.`);const r=(s=n.args)!==null&&s!==void 0?s:{};return fe(r)||x(!1,`${e.name}.${i} args must be an object with argument names as keys.`),{name:j(i),description:n.description,type:n.type,args:xt(r),resolve:n.resolve,subscribe:n.subscribe,deprecationReason:n.deprecationReason,extensions:M(n.extensions),astNode:n.astNode}})}function xt(e){return Object.entries(e).map(([t,n])=>({name:j(t),description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:M(n.extensions),astNode:n.astNode}))}function fe(e){return K(e)&&!Array.isArray(e)}function Ot(e){return ge(e,t=>({description:t.description,type:t.type,args:bt(t.args),resolve:t.resolve,subscribe:t.subscribe,deprecationReason:t.deprecationReason,extensions:t.extensions,astNode:t.astNode}))}function bt(e){return re(e,t=>t.name,t=>({description:t.description,type:t.type,defaultValue:t.defaultValue,deprecationReason:t.deprecationReason,extensions:t.extensions,astNode:t.astNode}))}function _i(e){return C(e.type)&&e.defaultValue===void 0}class gt{constructor(t){var n;this.name=j(t.name),this.description=t.description,this.resolveType=t.resolveType,this.extensions=M(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._fields=_t.bind(void 0,t),this._interfaces=It.bind(void 0,t),t.resolveType==null||typeof t.resolveType=="function"||x(!1,`${this.name} must provide "resolveType" as a function, but got: ${m(t.resolveType)}.`)}get[Symbol.toStringTag](){return"GraphQLInterfaceType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}getInterfaces(){return typeof this._interfaces=="function"&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:Ot(this.getFields()),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}class At{constructor(t){var n;this.name=j(t.name),this.description=t.description,this.resolveType=t.resolveType,this.extensions=M(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._types=Cn.bind(void 0,t),t.resolveType==null||typeof t.resolveType=="function"||x(!1,`${this.name} must provide "resolveType" as a function, but got: ${m(t.resolveType)}.`)}get[Symbol.toStringTag](){return"GraphQLUnionType"}getTypes(){return typeof this._types=="function"&&(this._types=this._types()),this._types}toConfig(){return{name:this.name,description:this.description,types:this.getTypes(),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function Cn(e){const t=Nt(e.types);return Array.isArray(t)||x(!1,`Must provide Array of types or a function which returns such an array for Union ${e.name}.`),t}class Le{constructor(t){var n;this.name=j(t.name),this.description=t.description,this.extensions=M(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._values=typeof t.values=="function"?t.values:wt(this.name,t.values),this._valueLookup=null,this._nameLookup=null}get[Symbol.toStringTag](){return"GraphQLEnumType"}getValues(){return typeof this._values=="function"&&(this._values=wt(this.name,this._values())),this._values}getValue(t){return this._nameLookup===null&&(this._nameLookup=ht(this.getValues(),n=>n.name)),this._nameLookup[t]}serialize(t){this._valueLookup===null&&(this._valueLookup=new Map(this.getValues().map(i=>[i.value,i])));const n=this._valueLookup.get(t);if(n===void 0)throw new O(`Enum "${this.name}" cannot represent value: ${m(t)}`);return n.name}parseValue(t){if(typeof t!="string"){const i=m(t);throw new O(`Enum "${this.name}" cannot represent non-string value: ${i}.`+De(this,i))}const n=this.getValue(t);if(n==null)throw new O(`Value "${t}" does not exist in "${this.name}" enum.`+De(this,t));return n.value}parseLiteral(t,n){if(t.kind!==u.ENUM){const s=ne(t);throw new O(`Enum "${this.name}" cannot represent non-enum value: ${s}.`+De(this,s),{nodes:t})}const i=this.getValue(t.value);if(i==null){const s=ne(t);throw new O(`Value "${s}" does not exist in "${this.name}" enum.`+De(this,s),{nodes:t})}return i.value}toConfig(){const t=re(this.getValues(),n=>n.name,n=>({description:n.description,value:n.value,deprecationReason:n.deprecationReason,extensions:n.extensions,astNode:n.astNode}));return{name:this.name,description:this.description,values:t,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function De(e,t){const n=e.getValues().map(s=>s.name),i=En(t,n);return mn("the enum value",i)}function wt(e,t){return fe(t)||x(!1,`${e} values must be an object with value names as keys.`),Object.entries(t).map(([n,i])=>(fe(i)||x(!1,`${e}.${n} must refer to an object with a "value" key representing an internal value but got: ${m(i)}.`),{name:An(n),description:i.description,value:i.value!==void 0?i.value:n,deprecationReason:i.deprecationReason,extensions:M(i.extensions),astNode:i.astNode}))}class St{constructor(t){var n,i;this.name=j(t.name),this.description=t.description,this.extensions=M(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this.isOneOf=(i=t.isOneOf)!==null&&i!==void 0?i:!1,this._fields=Fn.bind(void 0,t)}get[Symbol.toStringTag](){return"GraphQLInputObjectType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}toConfig(){const t=ge(this.getFields(),n=>({description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:n.extensions,astNode:n.astNode}));return{name:this.name,description:this.description,fields:t,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes,isOneOf:this.isOneOf}}toString(){return this.name}toJSON(){return this.toString()}}function Fn(e){const t=vt(e.fields);return fe(t)||x(!1,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`),ge(t,(n,i)=>(!("resolve"in n)||x(!1,`${e.name}.${i} field has a resolve property, but Input Types cannot define resolvers.`),{name:j(i),description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:M(n.extensions),astNode:n.astNode}))}function xi(e){return C(e.type)&&e.defaultValue===void 0}const We=2147483647,Ze=-2147483648,Un=new ce({name:"Int",description:"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",serialize(e){const t=Ee(e);if(typeof t=="boolean")return t?1:0;let n=t;if(typeof t=="string"&&t!==""&&(n=Number(t)),typeof n!="number"||!Number.isInteger(n))throw new O(`Int cannot represent non-integer value: ${m(t)}`);if(n>We||n<Ze)throw new O("Int cannot represent non 32-bit signed integer value: "+m(t));return n},parseValue(e){if(typeof e!="number"||!Number.isInteger(e))throw new O(`Int cannot represent non-integer value: ${m(e)}`);if(e>We||e<Ze)throw new O(`Int cannot represent non 32-bit signed integer value: ${e}`);return e},parseLiteral(e){if(e.kind!==u.INT)throw new O(`Int cannot represent non-integer value: ${ne(e)}`,{nodes:e});const t=parseInt(e.value,10);if(t>We||t<Ze)throw new O(`Int cannot represent non 32-bit signed integer value: ${e.value}`,{nodes:e});return t}}),Mn=new ce({name:"Float",description:"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",serialize(e){const t=Ee(e);if(typeof t=="boolean")return t?1:0;let n=t;if(typeof t=="string"&&t!==""&&(n=Number(t)),typeof n!="number"||!Number.isFinite(n))throw new O(`Float cannot represent non numeric value: ${m(t)}`);return n},parseValue(e){if(typeof e!="number"||!Number.isFinite(e))throw new O(`Float cannot represent non numeric value: ${m(e)}`);return e},parseLiteral(e){if(e.kind!==u.FLOAT&&e.kind!==u.INT)throw new O(`Float cannot represent non numeric value: ${ne(e)}`,e);return parseFloat(e.value)}}),g=new ce({name:"String",description:"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",serialize(e){const t=Ee(e);if(typeof t=="string")return t;if(typeof t=="boolean")return t?"true":"false";if(typeof t=="number"&&Number.isFinite(t))return t.toString();throw new O(`String cannot represent value: ${m(e)}`)},parseValue(e){if(typeof e!="string")throw new O(`String cannot represent a non string value: ${m(e)}`);return e},parseLiteral(e){if(e.kind!==u.STRING)throw new O(`String cannot represent a non string value: ${ne(e)}`,{nodes:e});return e.value}}),F=new ce({name:"Boolean",description:"The `Boolean` scalar type represents `true` or `false`.",serialize(e){const t=Ee(e);if(typeof t=="boolean")return t;if(Number.isFinite(t))return t!==0;throw new O(`Boolean cannot represent a non boolean value: ${m(t)}`)},parseValue(e){if(typeof e!="boolean")throw new O(`Boolean cannot represent a non boolean value: ${m(e)}`);return e},parseLiteral(e){if(e.kind!==u.BOOLEAN)throw new O(`Boolean cannot represent a non boolean value: ${ne(e)}`,{nodes:e});return e.value}}),Lt=new ce({name:"ID",description:'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.',serialize(e){const t=Ee(e);if(typeof t=="string")return t;if(Number.isInteger(t))return String(t);throw new O(`ID cannot represent value: ${m(e)}`)},parseValue(e){if(typeof e=="string")return e;if(typeof e=="number"&&Number.isInteger(e))return e.toString();throw new O(`ID cannot represent value: ${m(e)}`)},parseLiteral(e){if(e.kind!==u.STRING&&e.kind!==u.INT)throw new O("ID cannot represent a non-string and non-integer value: "+ne(e),{nodes:e});return e.value}}),Dt=Object.freeze([g,Un,Mn,F,Lt]);function Oi(e){return Dt.some(({name:t})=>e.name===t)}function Ee(e){if(K(e)){if(typeof e.valueOf=="function"){const t=e.valueOf();if(!K(t))return t}if(typeof e.toJSON=="function")return e.toJSON()}return e}function kt(e){return J(e,ue)}function bi(e){if(!kt(e))throw new Error(`Expected ${inspect(e)} to be a GraphQL directive.`);return e}class ue{constructor(t){var n,i;this.name=j(t.name),this.description=t.description,this.locations=t.locations,this.isRepeatable=(n=t.isRepeatable)!==null&&n!==void 0?n:!1,this.extensions=M(t.extensions),this.astNode=t.astNode,Array.isArray(t.locations)||x(!1,`@${t.name} locations must be an Array.`);const s=(i=t.args)!==null&&i!==void 0?i:{};K(s)&&!Array.isArray(s)||x(!1,`@${t.name} args must be an object with argument names as keys.`),this.args=xt(s)}get[Symbol.toStringTag](){return"GraphQLDirective"}toConfig(){return{name:this.name,description:this.description,locations:this.locations,args:bt(this.args),isRepeatable:this.isRepeatable,extensions:this.extensions,astNode:this.astNode}}toString(){return"@"+this.name}toJSON(){return this.toString()}}const Vn=new ue({name:"include",description:"Directs the executor to include this field or fragment only when the `if` argument is true.",locations:[I.FIELD,I.FRAGMENT_SPREAD,I.INLINE_FRAGMENT],args:{if:{type:new v(F),description:"Included when true."}}}),$n=new ue({name:"skip",description:"Directs the executor to skip this field or fragment when the `if` argument is true.",locations:[I.FIELD,I.FRAGMENT_SPREAD,I.INLINE_FRAGMENT],args:{if:{type:new v(F),description:"Skipped when true."}}}),jn="No longer supported",Bn=new ue({name:"deprecated",description:"Marks an element of a GraphQL schema as no longer supported.",locations:[I.FIELD_DEFINITION,I.ARGUMENT_DEFINITION,I.INPUT_FIELD_DEFINITION,I.ENUM_VALUE],args:{reason:{type:g,description:"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",defaultValue:jn}}}),Pn=new ue({name:"specifiedBy",description:"Exposes a URL that specifies the behavior of this scalar.",locations:[I.SCALAR],args:{url:{type:new v(g),description:"The URL that specifies the behavior of this scalar."}}}),Gn=new ue({name:"oneOf",description:"Indicates exactly one field must be supplied and this field must not be `null`.",locations:[I.INPUT_OBJECT],args:{}}),Rt=Object.freeze([Vn,$n,Bn,Pn,Gn]);function gi(e){return Rt.some(({name:t})=>t===e.name)}function Qn(e){return typeof e=="object"&&typeof(e==null?void 0:e[Symbol.iterator])=="function"}function Ne(e,t){if(C(t)){const n=Ne(e,t.ofType);return(n==null?void 0:n.kind)===u.NULL?null:n}if(e===null)return{kind:u.NULL};if(e===void 0)return null;if(de(t)){const n=t.ofType;if(Qn(e)){const i=[];for(const s of e){const r=Ne(s,n);r!=null&&i.push(r)}return{kind:u.LIST,values:i}}return Ne(e,n)}if(z(t)){if(!K(e))return null;const n=[];for(const i of Object.values(t.getFields())){const s=Ne(e[i.name],i.type);s&&n.push({kind:u.OBJECT_FIELD,name:{kind:u.NAME,value:i.name},value:s})}return{kind:u.OBJECT,fields:n}}if(He(t)){const n=t.serialize(e);if(n==null)return null;if(typeof n=="boolean")return{kind:u.BOOLEAN,value:n};if(typeof n=="number"&&Number.isFinite(n)){const i=String(n);return Ct.test(i)?{kind:u.INT,value:i}:{kind:u.FLOAT,value:i}}if(typeof n=="string")return te(t)?{kind:u.ENUM,value:n}:t===Lt&&Ct.test(n)?{kind:u.INT,value:n}:{kind:u.STRING,value:n};throw new TypeError(`Cannot convert value to AST: ${m(n)}.`)}_e(!1,"Unexpected input type: "+m(t))}const Ct=/^-?(?:0|[1-9][0-9]*)$/,Ke=new ie({name:"__Schema",description:"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",fields:()=>({description:{type:g,resolve:e=>e.description},types:{description:"A list of all types supported by this server.",type:new v(new V(new v(B))),resolve(e){return Object.values(e.getTypeMap())}},queryType:{description:"The type that query operations will be rooted at.",type:new v(B),resolve:e=>e.getQueryType()},mutationType:{description:"If this server supports mutation, the type that mutation operations will be rooted at.",type:B,resolve:e=>e.getMutationType()},subscriptionType:{description:"If this server support subscription, the type that subscription operations will be rooted at.",type:B,resolve:e=>e.getSubscriptionType()},directives:{description:"A list of all directives supported by this server.",type:new v(new V(new v(Ft))),resolve:e=>e.getDirectives()}})}),Ft=new ie({name:"__Directive",description:`A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.

In some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.`,fields:()=>({name:{type:new v(g),resolve:e=>e.name},description:{type:g,resolve:e=>e.description},isRepeatable:{type:new v(F),resolve:e=>e.isRepeatable},locations:{type:new v(new V(new v(Ut))),resolve:e=>e.locations},args:{type:new v(new V(new v(ke))),args:{includeDeprecated:{type:F,defaultValue:!1}},resolve(e,{includeDeprecated:t}){return t?e.args:e.args.filter(n=>n.deprecationReason==null)}}})}),Ut=new Le({name:"__DirectiveLocation",description:"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",values:{QUERY:{value:I.QUERY,description:"Location adjacent to a query operation."},MUTATION:{value:I.MUTATION,description:"Location adjacent to a mutation operation."},SUBSCRIPTION:{value:I.SUBSCRIPTION,description:"Location adjacent to a subscription operation."},FIELD:{value:I.FIELD,description:"Location adjacent to a field."},FRAGMENT_DEFINITION:{value:I.FRAGMENT_DEFINITION,description:"Location adjacent to a fragment definition."},FRAGMENT_SPREAD:{value:I.FRAGMENT_SPREAD,description:"Location adjacent to a fragment spread."},INLINE_FRAGMENT:{value:I.INLINE_FRAGMENT,description:"Location adjacent to an inline fragment."},VARIABLE_DEFINITION:{value:I.VARIABLE_DEFINITION,description:"Location adjacent to a variable definition."},SCHEMA:{value:I.SCHEMA,description:"Location adjacent to a schema definition."},SCALAR:{value:I.SCALAR,description:"Location adjacent to a scalar definition."},OBJECT:{value:I.OBJECT,description:"Location adjacent to an object type definition."},FIELD_DEFINITION:{value:I.FIELD_DEFINITION,description:"Location adjacent to a field definition."},ARGUMENT_DEFINITION:{value:I.ARGUMENT_DEFINITION,description:"Location adjacent to an argument definition."},INTERFACE:{value:I.INTERFACE,description:"Location adjacent to an interface definition."},UNION:{value:I.UNION,description:"Location adjacent to a union definition."},ENUM:{value:I.ENUM,description:"Location adjacent to an enum definition."},ENUM_VALUE:{value:I.ENUM_VALUE,description:"Location adjacent to an enum value definition."},INPUT_OBJECT:{value:I.INPUT_OBJECT,description:"Location adjacent to an input object type definition."},INPUT_FIELD_DEFINITION:{value:I.INPUT_FIELD_DEFINITION,description:"Location adjacent to an input object field definition."}}}),B=new ie({name:"__Type",description:"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",fields:()=>({kind:{type:new v($t),resolve(e){if(ae(e))return b.SCALAR;if(Y(e))return b.OBJECT;if(R(e))return b.INTERFACE;if(q(e))return b.UNION;if(te(e))return b.ENUM;if(z(e))return b.INPUT_OBJECT;if(de(e))return b.LIST;if(C(e))return b.NON_NULL;_e(!1,`Unexpected type: "${m(e)}".`)}},name:{type:g,resolve:e=>"name"in e?e.name:void 0},description:{type:g,resolve:e=>"description"in e?e.description:void 0},specifiedByURL:{type:g,resolve:e=>"specifiedByURL"in e?e.specifiedByURL:void 0},fields:{type:new V(new v(Mt)),args:{includeDeprecated:{type:F,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(Y(e)||R(e)){const n=Object.values(e.getFields());return t?n:n.filter(i=>i.deprecationReason==null)}}},interfaces:{type:new V(new v(B)),resolve(e){if(Y(e)||R(e))return e.getInterfaces()}},possibleTypes:{type:new V(new v(B)),resolve(e,t,n,{schema:i}){if(yt(e))return i.getPossibleTypes(e)}},enumValues:{type:new V(new v(Vt)),args:{includeDeprecated:{type:F,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(te(e)){const n=e.getValues();return t?n:n.filter(i=>i.deprecationReason==null)}}},inputFields:{type:new V(new v(ke)),args:{includeDeprecated:{type:F,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(z(e)){const n=Object.values(e.getFields());return t?n:n.filter(i=>i.deprecationReason==null)}}},ofType:{type:B,resolve:e=>"ofType"in e?e.ofType:void 0},isOneOf:{type:F,resolve:e=>{if(z(e))return e.isOneOf}}})}),Mt=new ie({name:"__Field",description:"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",fields:()=>({name:{type:new v(g),resolve:e=>e.name},description:{type:g,resolve:e=>e.description},args:{type:new v(new V(new v(ke))),args:{includeDeprecated:{type:F,defaultValue:!1}},resolve(e,{includeDeprecated:t}){return t?e.args:e.args.filter(n=>n.deprecationReason==null)}},type:{type:new v(B),resolve:e=>e.type},isDeprecated:{type:new v(F),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:g,resolve:e=>e.deprecationReason}})}),ke=new ie({name:"__InputValue",description:"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",fields:()=>({name:{type:new v(g),resolve:e=>e.name},description:{type:g,resolve:e=>e.description},type:{type:new v(B),resolve:e=>e.type},defaultValue:{type:g,description:"A GraphQL-formatted string representing the default value for this input value.",resolve(e){const{type:t,defaultValue:n}=e,i=Ne(n,t);return i?ne(i):null}},isDeprecated:{type:new v(F),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:g,resolve:e=>e.deprecationReason}})}),Vt=new ie({name:"__EnumValue",description:"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",fields:()=>({name:{type:new v(g),resolve:e=>e.name},description:{type:g,resolve:e=>e.description},isDeprecated:{type:new v(F),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:g,resolve:e=>e.deprecationReason}})});var b;(function(e){e.SCALAR="SCALAR",e.OBJECT="OBJECT",e.INTERFACE="INTERFACE",e.UNION="UNION",e.ENUM="ENUM",e.INPUT_OBJECT="INPUT_OBJECT",e.LIST="LIST",e.NON_NULL="NON_NULL"})(b||(b={}));const $t=new Le({name:"__TypeKind",description:"An enum describing what kind of type a given `__Type` is.",values:{SCALAR:{value:b.SCALAR,description:"Indicates this type is a scalar."},OBJECT:{value:b.OBJECT,description:"Indicates this type is an object. `fields` and `interfaces` are valid fields."},INTERFACE:{value:b.INTERFACE,description:"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields."},UNION:{value:b.UNION,description:"Indicates this type is a union. `possibleTypes` is a valid field."},ENUM:{value:b.ENUM,description:"Indicates this type is an enum. `enumValues` is a valid field."},INPUT_OBJECT:{value:b.INPUT_OBJECT,description:"Indicates this type is an input object. `inputFields` is a valid field."},LIST:{value:b.LIST,description:"Indicates this type is a list. `ofType` is a valid field."},NON_NULL:{value:b.NON_NULL,description:"Indicates this type is a non-null. `ofType` is a valid field."}}}),Ai={name:"__schema",type:new v(Ke),description:"Access the current type schema of this server.",args:[],resolve:(e,t,n,{schema:i})=>i,deprecationReason:void 0,extensions:Object.create(null),astNode:void 0},wi={name:"__type",type:B,description:"Request the type information of a single type.",args:[{name:"name",description:void 0,type:new v(g),defaultValue:void 0,deprecationReason:void 0,extensions:Object.create(null),astNode:void 0}],resolve:(e,{name:t},n,{schema:i})=>i.getType(t),deprecationReason:void 0,extensions:Object.create(null),astNode:void 0},Si={name:"__typename",type:new v(g),description:"The name of the current Object type at runtime.",args:[],resolve:(e,t,n,{parentType:i})=>i.name,deprecationReason:void 0,extensions:Object.create(null),astNode:void 0},jt=Object.freeze([Ke,Ft,Ut,B,Mt,ke,Vt,$t]);function Li(e){return jt.some(({name:t})=>e.name===t)}function Jn(e){return instanceOf(e,Bt)}function Di(e){if(!Jn(e))throw new Error(`Expected ${inspect(e)} to be a GraphQL schema.`);return e}class Bt{constructor(t){var n,i;this.__validationErrors=t.assumeValid===!0?[]:void 0,K(t)||x(!1,"Must provide configuration object."),!t.types||Array.isArray(t.types)||x(!1,`"types" must be Array if provided but got: ${m(t.types)}.`),!t.directives||Array.isArray(t.directives)||x(!1,`"directives" must be Array if provided but got: ${m(t.directives)}.`),this.description=t.description,this.extensions=M(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._queryType=t.query,this._mutationType=t.mutation,this._subscriptionType=t.subscription,this._directives=(i=t.directives)!==null&&i!==void 0?i:Rt;const s=new Set(t.types);if(t.types!=null)for(const r of t.types)s.delete(r),P(r,s);this._queryType!=null&&P(this._queryType,s),this._mutationType!=null&&P(this._mutationType,s),this._subscriptionType!=null&&P(this._subscriptionType,s);for(const r of this._directives)if(kt(r))for(const a of r.args)P(a.type,s);P(Ke,s),this._typeMap=Object.create(null),this._subTypeMap=Object.create(null),this._implementationsMap=Object.create(null);for(const r of s){if(r==null)continue;const a=r.name;if(a||x(!1,"One of the provided types for building the Schema is missing a name."),this._typeMap[a]!==void 0)throw new Error(`Schema must contain uniquely named types but contains multiple types named "${a}".`);if(this._typeMap[a]=r,R(r)){for(const l of r.getInterfaces())if(R(l)){let p=this._implementationsMap[l.name];p===void 0&&(p=this._implementationsMap[l.name]={objects:[],interfaces:[]}),p.interfaces.push(r)}}else if(Y(r)){for(const l of r.getInterfaces())if(R(l)){let p=this._implementationsMap[l.name];p===void 0&&(p=this._implementationsMap[l.name]={objects:[],interfaces:[]}),p.objects.push(r)}}}}get[Symbol.toStringTag](){return"GraphQLSchema"}getQueryType(){return this._queryType}getMutationType(){return this._mutationType}getSubscriptionType(){return this._subscriptionType}getRootType(t){switch(t){case ee.QUERY:return this.getQueryType();case ee.MUTATION:return this.getMutationType();case ee.SUBSCRIPTION:return this.getSubscriptionType()}}getTypeMap(){return this._typeMap}getType(t){return this.getTypeMap()[t]}getPossibleTypes(t){return q(t)?t.getTypes():this.getImplementations(t).objects}getImplementations(t){const n=this._implementationsMap[t.name];return n!=null?n:{objects:[],interfaces:[]}}isSubType(t,n){let i=this._subTypeMap[t.name];if(i===void 0){if(i=Object.create(null),q(t))for(const s of t.getTypes())i[s.name]=!0;else{const s=this.getImplementations(t);for(const r of s.objects)i[r.name]=!0;for(const r of s.interfaces)i[r.name]=!0}this._subTypeMap[t.name]=i}return i[n.name]!==void 0}getDirectives(){return this._directives}getDirective(t){return this.getDirectives().find(n=>n.name===t)}toConfig(){return{description:this.description,query:this.getQueryType(),mutation:this.getMutationType(),subscription:this.getSubscriptionType(),types:Object.values(this.getTypeMap()),directives:this.getDirectives(),extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes,assumeValid:this.__validationErrors!==void 0}}}function P(e,t){const n=Rn(e);if(!t.has(n)){if(t.add(n),q(n))for(const i of n.getTypes())P(i,t);else if(Y(n)||R(n)){for(const i of n.getInterfaces())P(i,t);for(const i of Object.values(n.getFields())){P(i.type,t);for(const s of i.args)P(s.type,t)}}else if(z(n))for(const i of Object.values(n.getFields()))P(i.type,t)}return t}function ve(e,t,n){if(e){if(e.kind===u.VARIABLE){const i=e.name.value;if(n==null||n[i]===void 0)return;const s=n[i];return s===null&&C(t)?void 0:s}if(C(t))return e.kind===u.NULL?void 0:ve(e,t.ofType,n);if(e.kind===u.NULL)return null;if(de(t)){const i=t.ofType;if(e.kind===u.LIST){const r=[];for(const a of e.values)if(Pt(a,n)){if(C(i))return;r.push(null)}else{const l=ve(a,i,n);if(l===void 0)return;r.push(l)}return r}const s=ve(e,i,n);return s===void 0?void 0:[s]}if(z(t)){if(e.kind!==u.OBJECT)return;const i=Object.create(null),s=ht(e.fields,r=>r.name.value);for(const r of Object.values(t.getFields())){const a=s[r.name];if(!a||Pt(a.value,n)){if(r.defaultValue!==void 0)i[r.name]=r.defaultValue;else if(C(r.type))return;continue}const l=ve(a.value,r.type,n);if(l===void 0)return;i[r.name]=l}if(t.isOneOf){const r=Object.keys(i);if(r.length!==1||i[r[0]]===null)return}return i}if(He(t)){let i;try{i=t.parseLiteral(e,n)}catch(s){return}return i===void 0?void 0:i}_e(!1,"Unexpected input type: "+m(t))}}function Pt(e,t){return e.kind===u.VARIABLE&&(t==null||t[e.name.value]===void 0)}function Yn(e,t){K(e)&&K(e.__schema)||x(!1,`Invalid or incomplete introspection result. Ensure that you are passing "data" property of introspection response and no "errors" was returned alongside: ${m(e)}.`);const n=e.__schema,i=re(n.types,c=>c.name,c=>E(c));for(const c of[...Dt,...jt])i[c.name]&&(i[c.name]=c);const s=n.queryType?d(n.queryType):null,r=n.mutationType?d(n.mutationType):null,a=n.subscriptionType?d(n.subscriptionType):null,l=n.directives?n.directives.map(qn):[];return new Bt({description:n.description,query:s,mutation:r,subscription:a,types:Object.values(i),directives:l,assumeValid:t==null?void 0:t.assumeValid});function p(c){if(c.kind===b.LIST){const y=c.ofType;if(!y)throw new Error("Decorated type deeper than introspection query.");return new V(p(y))}if(c.kind===b.NON_NULL){const y=c.ofType;if(!y)throw new Error("Decorated type deeper than introspection query.");const H=p(y);return new v(Dn(H))}return h(c)}function h(c){const y=c.name;if(!y)throw new Error(`Unknown type reference: ${m(c)}.`);const H=i[y];if(!H)throw new Error(`Invalid or incomplete schema, unknown type: ${y}. Ensure that a full introspection query is used in order to build a client schema.`);return H}function d(c){return wn(h(c))}function T(c){return Sn(h(c))}function E(c){if(c!=null&&c.name!=null&&c.kind!=null)switch(c.kind){case b.SCALAR:return S(c);case b.OBJECT:return k(c);case b.INTERFACE:return G(c);case b.UNION:return U(c);case b.ENUM:return Re(c);case b.INPUT_OBJECT:return X(c)}const y=m(c);throw new Error(`Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${y}.`)}function S(c){return new ce({name:c.name,description:c.description,specifiedByURL:c.specifiedByURL})}function _(c){if(c.interfaces===null&&c.kind===b.INTERFACE)return[];if(!c.interfaces){const y=m(c);throw new Error(`Introspection result missing interfaces: ${y}.`)}return c.interfaces.map(T)}function k(c){return new ie({name:c.name,description:c.description,interfaces:()=>_(c),fields:()=>Q(c)})}function G(c){return new gt({name:c.name,description:c.description,interfaces:()=>_(c),fields:()=>Q(c)})}function U(c){if(!c.possibleTypes){const y=m(c);throw new Error(`Introspection result missing possibleTypes: ${y}.`)}return new At({name:c.name,description:c.description,types:()=>c.possibleTypes.map(d)})}function Re(c){if(!c.enumValues){const y=m(c);throw new Error(`Introspection result missing enumValues: ${y}.`)}return new Le({name:c.name,description:c.description,values:re(c.enumValues,y=>y.name,y=>({description:y.description,deprecationReason:y.deprecationReason}))})}function X(c){if(!c.inputFields){const y=m(c);throw new Error(`Introspection result missing inputFields: ${y}.`)}return new St({name:c.name,description:c.description,fields:()=>he(c.inputFields),isOneOf:c.isOneOf})}function Q(c){if(!c.fields)throw new Error(`Introspection result missing fields: ${m(c)}.`);return re(c.fields,y=>y.name,Ie)}function Ie(c){const y=p(c.type);if(!Xe(y)){const H=m(y);throw new Error(`Introspection must provide output type for fields, but received: ${H}.`)}if(!c.args){const H=m(c);throw new Error(`Introspection result missing field args: ${H}.`)}return{description:c.description,deprecationReason:c.deprecationReason,type:y,args:he(c.args)}}function he(c){return re(c,y=>y.name,Ce)}function Ce(c){const y=p(c.type);if(!ze(y)){const zn=m(y);throw new Error(`Introspection must provide input type for arguments, but received: ${zn}.`)}const H=c.defaultValue!=null?ve(fn(c.defaultValue),y):void 0;return{description:c.description,type:y,defaultValue:H,deprecationReason:c.deprecationReason}}function qn(c){if(!c.args){const y=m(c);throw new Error(`Introspection result missing directive args: ${y}.`)}if(!c.locations){const y=m(c);throw new Error(`Introspection result missing directive locations: ${y}.`)}return new ue({name:c.name,description:c.description,isRepeatable:c.isRepeatable,locations:c.locations.slice(),args:he(c.args)})}}},82254:function(W,L,D){D.d(L,{K:function(){return x}});function x(Fe){const Z=Jt({descriptions:!0,specifiedByUrl:!1,directiveIsRepeatable:!1,schemaDescription:!1,inputValueDeprecation:!1,oneOf:!1},Fe),m=Z.descriptions?"description":"",le=Z.specifiedByUrl?"specifiedByURL":"",Ue=Z.directiveIsRepeatable?"isRepeatable":"",Me=Z.schemaDescription?m:"";function se($e){return Z.inputValueDeprecation?$e:""}const Ve=Z.oneOf?"isOneOf":"";return`
    query IntrospectionQuery {
      __schema {
        ${Me}
        queryType { name kind }
        mutationType { name kind }
        subscriptionType { name kind }
        types {
          ...FullType
        }
        directives {
          name
          ${m}
          ${Ue}
          locations
          args${se("(includeDeprecated: true)")} {
            ...InputValue
          }
        }
      }
    }

    fragment FullType on __Type {
      kind
      name
      ${m}
      ${le}
      ${Ve}
      fields(includeDeprecated: true) {
        name
        ${m}
        args${se("(includeDeprecated: true)")} {
          ...InputValue
        }
        type {
          ...TypeRef
        }
        isDeprecated
        deprecationReason
      }
      inputFields${se("(includeDeprecated: true)")} {
        ...InputValue
      }
      interfaces {
        ...TypeRef
      }
      enumValues(includeDeprecated: true) {
        name
        ${m}
        isDeprecated
        deprecationReason
      }
      possibleTypes {
        ...TypeRef
      }
    }

    fragment InputValue on __InputValue {
      name
      ${m}
      type { ...TypeRef }
      defaultValue
      ${se("isDeprecated")}
      ${se("deprecationReason")}
    }

    fragment TypeRef on __Type {
      kind
      name
      ofType {
        kind
        name
        ofType {
          kind
          name
          ofType {
            kind
            name
            ofType {
              kind
              name
              ofType {
                kind
                name
                ofType {
                  kind
                  name
                  ofType {
                    kind
                    name
                    ofType {
                      kind
                      name
                      ofType {
                        kind
                        name
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  `}}}]);
}());